// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "domofonEmulator/server/web/views/layout"

func LoginPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = LoginPageStyle().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"login-container\"><div class=\"login-card\"><div class=\"login-header\"><h1>Вход в систему</h1><img src=\"/server/web/static/icons/un-logo.png\" width=\"341px\" height=\"173px\" alt=\"ufanetlogo\"></div><div id=\"notification-area\"></div><form hx-post=\"/api/login\" hx-target=\"#notification-area\" hx-swap=\"innerHTML\" hx-trigger=\"submit\" class=\"login-form\" enctype=\"multipart/form-data\"><div class=\"form-group\"><label for=\"username\">Логин</label> <input type=\"text\" id=\"username\" name=\"login\" required placeholder=\"Введите ваш логин\"></div><div class=\"form-group\"><label for=\"password\">Пароль</label> <input type=\"password\" id=\"password\" name=\"password\" required placeholder=\"••••••••\"></div><div class=\"form-actions\"><button type=\"submit\" class=\"login-button\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><path d=\"M5 12h14M12 5l7 7-7 7\"></path></svg> Войти</button></div></form><div class=\"login-footer\"><a href=\"/register\" class=\"link\">Регистрация</a></div></div></div></main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.Layout(layout.LayoutProps{
			Title:           "DomofonPanel",
			MetaDescription: "DomofonPanel",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func LoginPageStyle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<style>\r\n    \r\n        * {\r\n            box-sizing: border-box;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    \r\n        body {\r\n            background-color: var(--light-gray);\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            min-height: 100vh;\r\n            padding: 20px;\r\n        }\r\n    \r\n        .login-container {\r\n            width: 100%;\r\n            max-width: 400px;\r\n        }\r\n    \r\n        .login-card {\r\n            background: white;\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n            padding: 30px;\r\n            transition: transform 0.3s ease;\r\n        }\r\n    \r\n        .login-header {\r\n            text-align: center;\r\n        }\r\n    \r\n        .login-header h1 {\r\n            color: var(--text-color);\r\n            font-size: 24px;\r\n            margin-bottom: 10px;\r\n        }\r\n    \r\n        .login-header svg {\r\n            color: var(--primary-color);\r\n        }\r\n    \r\n        .form-group {\r\n            margin-bottom: 20px;\r\n        }\r\n    \r\n        .form-group label {\r\n            display: block;\r\n            margin-bottom: 8px;\r\n            color: var(--text-color);\r\n            font-weight: 500;\r\n        }\r\n    \r\n        .form-group input {\r\n            width: 100%;\r\n            padding: 12px 15px;\r\n            border: 1px solid var(--border-color);\r\n            border-radius: 6px;\r\n            font-size: 16px;\r\n            transition: border 0.3s;\r\n        }\r\n    \r\n        .form-group input:focus {\r\n            border-color: var(--primary-color);\r\n            outline: none;\r\n            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n        }\r\n    \r\n        .login-button {\r\n            width: 100%;\r\n            background-color: var(--primary-color);\r\n            color: white;\r\n            padding: 14px;\r\n            border: none;\r\n            border-radius: 6px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            gap: 8px;\r\n            transition: background-color 0.3s;\r\n        }\r\n    \r\n        .login-button:hover {\r\n            background-color: var(--primary-hover);\r\n        }\r\n    \r\n        .login-footer {\r\n            margin-top: 25px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            font-size: 14px;\r\n        }\r\n    \r\n        .link {\r\n            color: var(--primary-color);\r\n            text-decoration: none;\r\n            transition: color 0.2s;\r\n        }\r\n    \r\n        .link:hover {\r\n            text-decoration: underline;\r\n        }\r\n    \r\n        @media (max-width: 480px) {\r\n            .login-card {\r\n                padding: 20px;\r\n            }\r\n    \r\n            .login-header h1 {\r\n                font-size: 20px;\r\n            }\r\n        }\r\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
