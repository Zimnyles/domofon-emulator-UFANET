// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "domofonEmulator/server/web/views/layout"

func CreateIntercomePage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = CreateIntercomePageStyle().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"login-container\"><div class=\"create-card\"><div class=\"login-header\"><div class=\"header-with-back\"><a href=\"/connect\" class=\"back-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line> <polyline points=\"12 19 5 12 12 5\"></polyline></svg></a><h1>Добавление нового домофона</h1></div><img src=\"/server/web/static/icons/un-logo.png\" width=\"341px\" height=\"173px\" alt=\"doorinactive ico\"></div><form hx-encoding=\"multipart/form-data\" hx-post=\"/api/createIntercom\" hx-target=\"#notification-area\" hx-target-error=\"#notification-area\" hx-trigger=\"submit\" hx-swap=\"innerHTML\" class=\"login-form\" enctype=\"multipart/form-data\" hx-on::after-request=\"if(event.detail.successful) this.reset()\"><div class=\"form-group\"><label for=\"mac\">MAC-адрес:</label><div class=\"mac-group\"><input type=\"text\" id=\"mac\" name=\"mac\" placeholder=\"XX:XX:XX:XX:XX:XX\" required> <button type=\"button\" class=\"secondary-button\" onclick=\"generateMAC()\">Сгенерировать</button></div></div><div class=\"form-group\"><label for=\"address\">Адрес установки:</label> <input type=\"text\" id=\"address\" name=\"address\" required></div><div class=\"form-group\"><label for=\"apartments\">Количество квартир:</label> <input type=\"number\" id=\"apartments\" name=\"apartments\" min=\"1\" required></div><div class=\"form-actions\"><button type=\"submit\" class=\"login-button\">Создать домофон</button></div></form><div id=\"notification-area\"></div></div></div></main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.Layout(layout.LayoutProps{
			Title:           "Добавление домофона",
			MetaDescription: "Добавление",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func CreateIntercomePageStyle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<style>\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        background-color: var(--light-gray);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-height: 100vh;\r\n        padding: 20px;\r\n    }\r\n\r\n    .login-container {\r\n        width: 100%;\r\n        max-width: 600px;\r\n    }\r\n\r\n    .create-card {\r\n        background: white;\r\n        border-radius: 10px;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        padding: 30px;\r\n        transition: transform 0.3s ease;\r\n    }\r\n\r\n    .login-header {\r\n        text-align: center;\r\n        margin-bottom: 20px;\r\n        position: relative;\r\n    }\r\n\r\n    .header-with-back {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 15px;\r\n        position: relative;\r\n        padding-left: 40px; \r\n    }\r\n\r\n    .back-button {\r\n        color: #4caf50;\r\n        text-decoration: none;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        transition: transform 0.2s;\r\n        position: absolute;\r\n        left: 0;\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n\r\n     .back-button:hover {\r\n        color: #3e8e41;\r\n    }\r\n\r\n    .login-header h1 {\r\n        color: var(--text-color);\r\n        font-size: 24px;\r\n        text-align: center;\r\n        width: 100%; \r\n    }\r\n\r\n    .form-group {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .form-group label {\r\n        display: block;\r\n        margin-bottom: 8px;\r\n        color: var(--text-color);\r\n        font-weight: 500;\r\n    }\r\n\r\n    .form-group input {\r\n        width: 100%;\r\n        padding: 12px 15px;\r\n        border: 1px solid #ddd;\r\n        border-radius: 6px;\r\n        font-size: 16px;\r\n        transition: border 0.3s;\r\n    }\r\n\r\n    .form-group input:focus {\r\n        border-color: white;\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n    }\r\n\r\n    .mac-group {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n\r\n    .mac-group input {\r\n        flex: 1;\r\n    }\r\n\r\n    .secondary-button {\r\n        background-color: #6c757d;\r\n        color: white;\r\n        padding: 12px 15px;\r\n        border: none;\r\n        border-radius: 6px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .secondary-button:hover {\r\n        background-color: #5a6268;\r\n    }\r\n\r\n    .login-button {\r\n        width: 100%;\r\n        background-color: #4caf50;\r\n        color: white;\r\n        padding: 14px;\r\n        border: none;\r\n        border-radius: 6px;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s;\r\n    }\r\n\r\n    .login-button:hover {\r\n        background-color: #3e8e41;\r\n    }\r\n\r\n    .form-actions {\r\n        margin-top: 25px;\r\n    }\r\n\r\n</style><script>\r\n    function generateMAC() {\r\n        const hexDigits = \"0123456789ABCDEF\";\r\n        let mac = \"\";\r\n        for (let i = 0; i < 6; i++) {\r\n            mac += hexDigits.charAt(Math.floor(Math.random() * 16));\r\n            mac += hexDigits.charAt(Math.floor(Math.random() * 16));\r\n            if (i < 5) mac += \":\";\r\n        }\r\n        const firstByte = parseInt(mac.substring(0, 2), 16);\r\n        const newFirstByte = (firstByte | 0x02) & 0xFE;\r\n        const newFirstHex = newFirstByte.toString(16).padStart(2, '0').toUpperCase();\r\n        document.getElementById(\"mac\").value = newFirstHex + mac.substring(2);\r\n    }\r\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
